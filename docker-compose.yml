services:
  postgres:
    image: postgres:15-alpine
    container_name: ${PROYECT_NAME}-db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - ./data/db:/var/lib/postgresql/data

  backend:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile
      args:
        NODE_ENV: ${NODE_ENV}
        BACKEND_URL: ${BACKEND_URL}
        BACKEND_PORT: ${BACKEND_PORT}
    container_name: ${PROYECT_NAME}-${NODE_ENV}-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}
      BACKEND_URL: ${BACKEND_URL}
      BACKEND_PORT: ${BACKEND_PORT}
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    volumes:
      - ./packages/backend:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - postgres

  admin:
    build:
      context: ./packages/admin
      dockerfile: Dockerfile
      args:
        REACT_APP_ADMIN_URL: ${REACT_APP_ADMIN_URL}
        REACT_APP_ADMIN_PORT: ${REACT_APP_ADMIN_PORT}
        PORT: ${PORT}
    container_name: ${PROYECT_NAME}-${NODE_ENV}-admin
    ports:
      - "${REACT_APP_ADMIN_PORT}:${PORT}"
    volumes:
      - ./packages/admin:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - backend

  frontend:
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile
      args:
        FRONTEND_URL: ${FRONTEND_URL}
        FRONTEND_PORT: ${FRONTEND_PORT}
    container_name: ${PROYECT_NAME}-${NODE_ENV}-frontend
    ports:
      - "${FRONTEND_PORT}:4321"
    environment:
      - HOST=0.0.0.0
    volumes:
      - ./packages/frontend:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - backend

networks:
  nar-app-network:
    driver: bridge